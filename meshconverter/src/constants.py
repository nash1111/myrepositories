import logging

# ログ出力の設定
LOGGER_FORMAT = "logging:@:%(asctime)s:%(filename)s(%(lineno)s):fn:%(funcName)s:\nlevel:%(levelname)s:%(message)s"
LOGGER_LEVEL = logging.INFO
LOGGER_INTERVAL = 50000

# 1つの要素を構成する節点の個数
NUM_NODES_OF_ELEMENT = 8
# 1つの面を構成する節点の個数
NUM_NODES_OF_FACE = 4
# 1つの要素を構成する面の個数
NUM_FACES_OF_ELEMENT = 6

# 同じ座標値の節点であるかを判定する際に用いる係数
TOLERANCE_RATE = 0.000001

# 無効を表す
INVALID = -1

# 要素の設定する2種類のフラグ
ELEMENT_FLAG_A = 1
ELEMENT_FLAG_B = -1
# フラグが未設定であることを表す値
ELEMENT_FLAG_UNDETERMINED = 0
# 最初の要素に設定するフラグの値
ELEMENT_FLAG_INITIAL = ELEMENT_FLAG_A
# メッシュデータを出力するときのフラグの桁数
NUM_DIGITS_OF_ELEMENT_FLAG = 2

# Ansysファイルで、節点ブロックや要素ブロックの終了を表す文字列
ANSYS_END_OF_BLOCK = '-1'

# 節点のデータフレームでの列の名前
COLUMN_NODE_ID = 'NodeId'
COLUMN_X = 'x'
COLUMN_Y = 'y'
COLUMN_Z = 'z'

# 要素のデータフレームでの列の名前
COLUMN_DOMAIN_ID = 'DomainId'
COLUMN_ELEMENT_TYPE = 'ElementType'
COLUMN_ELEMENT_ID = 'ElementId'
COLUMN_NODE_0 = 'Node0'
COLUMN_NODE_1 = 'Node1'
COLUMN_NODE_2 = 'Node2'
COLUMN_NODE_3 = 'Node3'
COLUMN_NODE_4 = 'Node4'
COLUMN_NODE_5 = 'Node5'
COLUMN_NODE_6 = 'Node6'
COLUMN_NODE_7 = 'Node7'

NODES_COLUMNS = [COLUMN_NODE_ID, COLUMN_X, COLUMN_Y, COLUMN_Z]

# 節点並び替えで使用する、ペアとなるべき面の番号を表している。
# 面0と面5、面1と面3、面2と面4がそれぞれペアとなっている。
FACE_RELATION_ARRAY = [5, 3, 4, 1, 2, 0]

# 面を構成する節点について、要素内でのローカルな番号の配列
NODES_OF_FACE = [
    [0, 2, 3, 1],
    [0, 1, 5, 4],
    [1, 3, 7, 5],
    [2, 6, 7, 3],
    [0, 4, 6, 2],
    [4, 5, 7, 6]
]

# 要素内の節点並び替えで使用する、NODES_OF_FACEを逆順にした配列である。
# 単純に配列を逆順にしたわけではなく、配列の最初の番号が同じになるようにしている
NODES_OF_FACE_REVERSE = [
    [0, 1, 3, 2],
    [0, 4, 5, 1],
    [1, 5, 7, 3],
    [2, 3, 7, 6],
    [0, 2, 6, 4],
    [4, 6, 7, 5]
]

# 節点の並び替え方を表す配列である。ORDERED_FACE_NUMBERとペアになっている
ORDERED_NODES = [
    # 並び替え前の面0が、並び替え後に面0になる場合
    [0, 1, 2, 3, 4, 5, 6, 7],
    [2, 0, 3, 1, 6, 4, 7, 5],
    [3, 2, 1, 0, 7, 6, 5, 4],
    [1, 3, 0, 2, 5, 7, 4, 6],
    # 並び替え前の面1が、並び替え後に面0になる場合
    [1, 0, 5, 4, 3, 2, 7, 6],
    [5, 1, 4, 0, 7, 3, 6, 2],
    [4, 5, 0, 1, 6, 7, 2, 3],
    [0, 4, 1, 5, 2, 6, 3, 7],
    # 並び替え前の面2が、並び替え後に面0になる場合
    [3, 1, 7, 5, 2, 0, 6, 4],
    [7, 3, 5, 1, 6, 2, 4, 0],
    [5, 7, 1, 3, 4, 6, 0, 2],
    [1, 5, 3, 7, 0, 4, 2, 6],
    # 並び替え前の面3が、並び替え後に面0になる場合
    [2, 3, 6, 7, 0, 1, 4, 5],
    [6, 2, 7, 3, 4, 0, 5, 1],
    [7, 6, 3, 2, 5, 4, 1, 0],
    [3, 7, 2, 6, 1, 5, 0, 4],
    # 並び替え前の面4が、並び替え後に面0になる場合
    [0, 2, 4, 6, 1, 3, 5, 7],
    [4, 0, 6, 2, 5, 1, 7, 3],
    [6, 4, 2, 0, 7, 5, 3, 1],
    [2, 6, 0, 4, 3, 7, 1, 5],
    # 並び替え前の面5が、並び替え後に面0になる場合
    [5, 4, 7, 6, 1, 0, 3, 2],
    [7, 5, 6, 4, 3, 1, 2, 0],
    [6, 7, 4, 5, 2, 3, 0, 1],
    [4, 6, 5, 7, 0, 2, 1, 3]
]

# 節点の並び替えでの面番号の変わり方を表す配列である。ORDERED_NODESとペアになっている
ORDERED_FACE_NUMBER = [
    # 並び替え前の面0が、並び替え後に面0になる場合
    [0, 1, 2, 3, 4, 5],
    [0, 4, 1, 2, 3, 5],
    [0, 3, 4, 1, 2, 5],
    [0, 2, 3, 4, 1, 5],
    # 並び替え前の面1が、並び替え後に面0になる場合
    [1, 0, 4, 5, 2, 3],
    [1, 2, 0, 4, 5, 3],
    [1, 5, 2, 0, 4, 3],
    [1, 4, 5, 2, 0, 3],
    # 並び替え前の面2が、並び替え後に面0になる場合
    [2, 0, 1, 5, 3, 4],
    [2, 3, 0, 1, 5, 4],
    [2, 5, 3, 0, 1, 4],
    [2, 1, 5, 3, 0, 4],
    # 並び替え前の面3が、並び替え後に面0になる場合
    [3, 0, 2, 5, 4, 1],
    [3, 4, 0, 2, 5, 1],
    [3, 5, 4, 0, 2, 1],
    [3, 2, 5, 4, 0, 1],
    # 並び替え前の面4が、並び替え後に面0になる場合
    [4, 0, 3, 5, 1, 2],
    [4, 1, 0, 3, 5, 2],
    [4, 5, 1, 0, 3, 2],
    [4, 3, 5, 1, 0, 2],
    # 並び替え前の面5が、並び替え後に面0になる場合
    [5, 1, 4, 3, 2, 0],
    [5, 2, 1, 4, 3, 0],
    [5, 3, 2, 1, 4, 0],
    [5, 4, 3, 2, 1, 0]
]


"""
ORDERED_NODES, ORDERED_FACE_NUMBERを作る際の作業用メモ
# v1 並び替えnode後0->並び替え後node1, v2 並び替え後node0->並び替え後node2, v3 並び替え後node0->並び替え後node4
[0, 1, 2, 3, 4, 5],
v1 node0 -> node1の方向 +1
v2 node0 -> node2の方向 +2
v3 node0 -> node4の方向 +4

                    node0  v1  v2 v3
[0, 1, 2, 3, 4, 5],     0,  1,  2,  4
[0, 4, 1, 2, 3, 5],     2, -2,  1,  4
[0, 3, 4, 1, 2, 5],     3, -1, -2,  4
[0, 2, 3, 4, 1, 5],     1,  2, -1,  4
                                   
[1, 0, 4, 5, 2, 3],     1, -1,  4,  2
[1, 2, 0, 4, 5, 3],     5, -4, -1,  2
[1, 5, 2, 0, 4, 3],     4,  1, -4,  2
[1, 4, 5, 2, 0, 3],     0,  4,  1,  2
                                   
[2, 0, 1, 5, 3, 4],     3, -2,  4, -1
[2, 3, 0, 1, 5, 4],     7, -4, -2, -1
[2, 5, 3, 0, 1, 4],     5,  2, -4, -1
[2, 1, 5, 3, 0, 4],     1,  4,  2, -1
                                   
[3, 0, 2, 5, 4, 1],     2,  1,  4, -2
[3, 4, 0, 2, 5, 1],     6, -4,  1, -2
[3, 5, 4, 0, 2, 1],     7, -1, -4, -2
[3, 2, 5, 4, 0, 1],     3,  4, -1, -2
                                   
[4, 0, 3, 5, 1, 2],     0,  2,  4,  1
[4, 1, 0, 3, 5, 2],     4, -4,  2,  1
[4, 5, 1, 0, 3, 2],     6, -2, -4,  1
[4, 3, 5, 1, 0, 2],     2,  4, -2,  1
                                   
[5, 1, 4, 3, 2, 0],     5, -1,  2, -4
[5, 2, 1, 4, 3, 0],     7, -2, -1, -4
[5, 3, 2, 1, 4, 0],     6,  1, -2, -4
[5, 4, 3, 2, 1, 0]      4,  2,  1, -4

"""

